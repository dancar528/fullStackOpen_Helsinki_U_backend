{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/persons.js","components/App.js","index.js"],"names":["Filter","value","handleSearchChange","onChange","PersonForm","name","number","handleNameChange","handleNumberChange","handleFormSubmit","onSubmit","type","Person","id","handleRemovePerson","onClick","Persons","search","persons","filter","person","toLowerCase","indexOf","map","index","key","Notification","notification","message","className","baseUrl","axios","get","then","response","data","newPerson","post","catch","error","personId","delete","console","log","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","setNotification","useEffect","personService","initialPersons","showNotification","newNotification","setTimeout","event","target","preventDefault","newNameIndex","findIndex","window","confirm","updatedPerson","i","createdPerson","concat","personName","attributes","selectedIndex","_","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c4a960d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ value, handleSearchChange }) => (\n    <div>\n        filter shown with <input value={value} onChange={handleSearchChange} />\n    </div>\n);\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({\n    name,\n    number,\n    handleNameChange,\n    handleNumberChange,\n    handleFormSubmit\n}) => (\n    <div>\n        <h3>Add a new</h3>\n        <form onSubmit={handleFormSubmit}>\n            <div>\n                name: <input value={name} onChange={handleNameChange} />\n            </div>\n            <div>\n                number: <input value={number} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    </div>\n);\n\nexport default PersonForm;","import React from 'react';\n\nconst Person = ({ name, number, id, handleRemovePerson }) => (\n    <div>\n        <span>{name} {number}</span>\n        <button\n            id={id}\n            name={name} \n            onClick={handleRemovePerson}>Delete</button>\n    </div>\n);\n\nexport default Person;","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ search, persons, handleRemovePerson }) => {\n    const personsFilter = search\n        ? persons.filter(person =>\n            person.name.toLowerCase().indexOf(search.toLowerCase()) !== -1\n        )\n        : persons;\n    return personsFilter.map((person, index) =>\n        <Person\n            key={index}\n            name={person.name}\n            number={person.number}\n            id={person.id}\n            handleRemovePerson={handleRemovePerson} />\n    );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n    const { message, type } = notification;\n    if (message === '') {\n        return null;\n    }\n    return (\n        <div className={type}>\n            {message}\n        </div>\n    );\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data);\n};\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson);\n    return request\n        .then(response => response.data)\n        .catch(error => error.response.data);\n};\n\nconst remove = personId => {\n    const request = axios.delete(`${baseUrl}/${personId}`);\n    return request.then(response =>\n        console.log('remove response', response)\n    );\n};\n\nconst update = person => {\n    const request = axios.put(`${baseUrl}/${person.id}`, person);\n    return request\n        .then(response => response.data)\n        .catch(error => error.response.data);\n};\n\nexport default { getAll, create, remove, update };\n","import React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport Notification from './Notification';\nimport personService from './../services/persons';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [newSearch, setNewSearch] = useState('');\n    const [notification, setNotification] = useState({\n        message: '',\n        type: ''\n    });\n\n    useEffect(() => {\n        personService.getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons);\n            });\n    }, []);\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    };\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    };\n\n    const handleSearchChange = (event) => {\n        setNewSearch(event.target.value);\n    };\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        const newNameIndex = persons.findIndex(person => \n            person.name.toLowerCase() === newName.toLowerCase());\n        let message = '',\n            type = '';\n        if (newNameIndex > -1) {\n            const replaceConfirm = window.confirm(\n                `${newName} is already added to phonebook, replace the old number with a new one?`);\n\n            if (replaceConfirm) {\n                const newPerson = {\n                    ...persons[newNameIndex],\n                    number: newNumber\n                };\n                personService.update(newPerson)\n                    .then(updatedPerson => {\n                        if (updatedPerson.error) {\n                            message = updatedPerson.error;\n                            type = 'error';\n                        } else {\n                            message = `Replaced ${newPerson.name}`;\n                            type = 'success';\n                            setPersons(persons.map((person, i) =>\n                                i !== newNameIndex ? person : updatedPerson));\n                        }\n                        showNotification(message, type);\n                    });\n                return;\n            }\n            setNewName('');\n            setNewNumber('');\n            return;\n        }\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        };\n        personService.create(newPerson)\n            .then(createdPerson => {\n                if (createdPerson.error) {\n                    message = createdPerson.error;\n                    type = 'error';\n                } else {\n                    setPersons(persons.concat(createdPerson));\n                    message = `Added ${newPerson.name}`;\n                    type = 'success';\n                }\n                showNotification(message, type);\n            });\n    };\n\n    const showNotification = (message, type) => {\n        setNewName('');\n        setNewNumber('');\n        let newNotification = {\n            ...notification,\n            message: message,\n            type: type\n        };\n        setNotification(newNotification);\n        setTimeout(() => {\n            newNotification = {\n                ...notification,\n                message: '',\n                type: ''\n            };\n            setNotification(newNotification);\n        }, 5000);\n    };\n\n    const handleRemovePerson = (event) => {\n        const personName = event.target.attributes.name.value;\n        const confirmRemove = window.confirm(`Delete ${personName}?`);\n        if (!confirmRemove) return;\n\n        const personId = event.target.attributes.id.value;\n        const selectedIndex = persons.findIndex(person =>\n                person.id === personId\n            );\n        let message = '',\n            type = '';\n        personService.remove(personId)\n            .then(_ => {\n                setPersons(persons.filter((_, i) => i !== selectedIndex));\n            })\n            .catch(error => {\n                message = `Information of ${personName} has already been removed from server`\n                type = 'error';\n                showNotification(message, type);\n            });\n    };\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification notification={notification} />\n            <Filter value={newSearch} handleSearchChange={handleSearchChange} />\n            <PersonForm\n                name={newName}\n                number={newNumber}\n                handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n                handleFormSubmit={handleFormSubmit} />\n            <h3>Numbers</h3>\n            <Persons\n                search={newSearch}\n                persons={persons}\n                handleRemovePerson={handleRemovePerson} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}